a:6:{s:9:"classesIn";a:1:{s:47:"SamMcDonald\Json\Assertion\AbstractJsonAsserter";a:6:{s:4:"name";s:20:"AbstractJsonAsserter";s:14:"namespacedName";s:47:"SamMcDonald\Json\Assertion\AbstractJsonAsserter";s:9:"namespace";s:26:"SamMcDonald\Json\Assertion";s:9:"startLine";i:10;s:7:"endLine";i:47;s:7:"methods";a:3:{s:20:"throwInvalidArgument";a:6:{s:10:"methodName";s:20:"throwInvalidArgument";s:9:"signature";s:43:"throwInvalidArgument(string $message): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:12;s:7:"endLine";i:15;s:3:"ccn";i:1;}s:13:"checkHasArray";a:6:{s:10:"methodName";s:13:"checkHasArray";s:9:"signature";s:43:"checkHasArray(array|\stdClass $value): bool";s:10:"visibility";s:9:"protected";s:9:"startLine";i:17;s:7:"endLine";i:30;s:3:"ccn";i:5;}s:19:"checkCountSubArrays";a:6:{s:10:"methodName";s:19:"checkCountSubArrays";s:9:"signature";s:48:"checkCountSubArrays(array|\stdClass $value): int";s:10:"visibility";s:9:"protected";s:9:"startLine";i:32;s:7:"endLine";i:46;s:3:"ccn";i:4;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:48;s:18:"commentLinesOfCode";i:0;s:21:"nonCommentLinesOfCode";i:48;}s:15:"ignoredLinesFor";a:1:{i:0;i:10;}s:17:"executableLinesIn";a:14:{i:14;i:1;i:19;i:2;i:20;i:3;i:21;i:4;i:24;i:5;i:25;i:6;i:29;i:7;i:34;i:8;i:35;i:9;i:36;i:10;i:37;i:11;i:40;i:12;i:41;i:13;i:45;i:14;}}